services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - internal_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  backend:
    build: ./server
    env_file:
      - ./server/.env
    environment:
      DB_URL: ${DB_URL}
      PORT: ${PORT}
      HTTPS: true
    networks:
      - internal_network
      - external_network
    ports:
      - "3002:3002"
    volumes:
      - ./ssl:/app/ssl
    depends_on:
      db:
        condition: service_healthy
    restart: always

  frontend:
    build: ./client
    networks:
      - external_network
    ports:
      - "8088:80"
    depends_on:
      backend:
        condition: service_started
    restart: always

  backup:
    build: ./backup
    volumes:
      - ./backup:/backup
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      - db
    networks:
      - internal_network
    restart: always

volumes:
  pgdata:

networks:
  internal_network:
  external_network:
